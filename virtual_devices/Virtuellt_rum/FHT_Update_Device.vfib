{"name":"FHT Update Device","type":"virtual_device","properties":{"deviceIcon":1005,"currentIcon":"1005","log":"","logTemp":"","mainLoop":"","saveLogs":"1","ui.lblId.value":63,"ui.lblName.value":"fht.vardagsrummet","rows":[{"type":"button","elements":[{"id":1,"lua":true,"waitForResponse":false,"caption":"Uppdatera","name":"btnUpdate","empty":false,"msg":"-- Setting up the connection data\n  --FHEM = Net.FHttp(\"192.168.0.13\", 8083)\n  FHEM = Net.FHttp(\"192.168.0.13\", 8083)\n\n-- geting info about specific device\n  deviceId = fibaro:getValue(59, 'ui.lblId.value')\n  deviceName = fibaro:getValue(59, 'ui.lblName.value')\n  fibaro:debug(\"deviceName=\"..deviceName)\n  response = FHEM:GET(\"/fhem?cmd=jsonlist+\"..deviceName..\"&XHR=1\")\n\n-- decoding json string to table\n  result = json.decode(response)\n\n-- Special usecase of [\"\"] for json tree items with a - in it.\n-- Be aware not to use a . infront of the [ !!\n--  res2 = result.ResultSet.Results.ATTRIBUTES.room\n  actuator = result.ResultSet.Results.READINGS[\"actuator\"].VAL\n  actuatorTime = result.ResultSet.Results.READINGS[\"actuator\"].TIME\n  fibaro:call(deviceId, \"setProperty\", \"ui.lblActuator.value\", actuator)\n\n  battery = result.ResultSet.Results.READINGS[\"battery\"].VAL\n  batteryTime = result.ResultSet.Results.READINGS[\"battery\"].TIME\n  fibaro:call(deviceId, \"setProperty\", \"ui.lblBattery.value\", battery)\n\n  desiredTemp = result.ResultSet.Results.READINGS[\"desired-temp\"].VAL\n  desiredTempTime = result.ResultSet.Results.READINGS[\"desired-temp\"].TIME\n  fibaro:call(deviceId, \"setProperty\", \"ui.lblDesiredTemp.value\", desiredTemp)\n\n  measuredTemp = result.ResultSet.Results.READINGS[\"measured-temp\"].VAL\n  measuredTempTime = result.ResultSet.Results.READINGS[\"measured-temp\"].TIME\n  fibaro:call(deviceId, \"setProperty\", \"ui.lblMeasuredTemp.value\", measuredTemp)\n\n  mode = result.ResultSet.Results.READINGS[\"mode\"].VAL\n  modeTime = result.ResultSet.Results.READINGS[\"mode\"].TIME\n  fibaro:call(deviceId, \"setProperty\", \"ui.lblMode.value\", mode)\n\n  warnings = result.ResultSet.Results.READINGS[\"warnings\"].VAL\n  warningsTime = result.ResultSet.Results.READINGS[\"warnings\"].TIME\n  fibaro:call(deviceId, \"setProperty\", \"ui.lblWarnings.value\", warnings)\n\n  window = result.ResultSet.Results.READINGS[\"window\"].VAL\n  windowTime = result.ResultSet.Results.READINGS[\"window\"].TIME\n  fibaro:call(deviceId, \"setProperty\", \"ui.lblWindow.value\", window)\n\n  windowsensor = result.ResultSet.Results.READINGS[\"windowsensor\"].VAL\n  windowsensorTime = result.ResultSet.Results.READINGS[\"windowsensor\"].TIME\n  fibaro:call(deviceId, \"setProperty\", \"ui.lblWindowSensor.value\", windowsensor)\n\n  fibaro:debug(\"actuator=\"..actuator..\" kl. \"..actuatorTime)\t\n  fibaro:debug(\"battery=\"..battery..\" kl. \"..batteryTime)\n  fibaro:debug(\"desired-temp=\"..desiredTemp..\" kl. \"..desiredTempTime)\n  fibaro:debug(\"measured-temp=\"..measuredTemp..\" kl. \"..measuredTempTime)\n  fibaro:debug(\"mode=\"..mode..\" kl. \"..modeTime)\n  fibaro:debug(\"warnings=\"..warnings..\" kl. \"..warningsTime)\n  fibaro:debug(\"window=\"..window..\" kl. \"..windowTime)\n  fibaro:debug(\"windowsensor=\"..windowsensor..\" kl. \"..windowsensorTime)\n","buttonIcon":1005,"favourite":false,"main":true}]},{"type":"label","elements":[{"id":2,"lua":false,"waitForResponse":false,"caption":"Id","name":"lblId","favourite":false,"main":false}]},{"type":"label","elements":[{"id":3,"lua":false,"waitForResponse":false,"caption":"Namn","name":"lblName","favourite":false,"main":false}]}]},"actions":{"pressButton":1,"setSlider":2,"setProperty":2}}